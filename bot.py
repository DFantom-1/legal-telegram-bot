import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
import anthropic

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# API –∫–ª—é—á—ñ
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
ANTHROPIC_API_KEY = os.getenv('ANTHROPIC_API_KEY')
LAWYER_PHONE = "+380983607200"
LAWYER_USERNAME = "Law_firm_zakhyst"

# Claude –∫–ª—ñ—î–Ω—Ç
client = anthropic.Anthropic(api_key=ANTHROPIC_API_KEY)

# –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
new_users = set()

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    text = """üèõÔ∏è **–Æ—Ä–∏–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç**

–í—ñ—Ç–∞—é! –Ø –Ω–∞–¥–∞—é –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —é—Ä–∏–¥–∏—á–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ –£–∫—Ä–∞—ó–Ω–∏.

**–©–æ —è –º–æ–∂—É:**
‚öñÔ∏è –í—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –ø—Ä–∞–≤–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è
üìã –ü–æ—Å–∏–ª–∞—Ç–∏—Å—è –Ω–∞ –∑–∞–∫–æ–Ω–∏ –£–∫—Ä–∞—ó–Ω–∏
üí° –î–∞–≤–∞—Ç–∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏
üë®‚Äçüíº –ó'—î–¥–Ω—É–≤–∞—Ç–∏ –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º

**–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à—ñ—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü—ñ—é - —è –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É—é —ñ –¥–∞–º –≤—ñ–¥–ø–æ–≤—ñ–¥—å!**"""

    keyboard = [[InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º", callback_data="lawyer")]]
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    user_id = update.effective_user.id
    message = update.message.text
    username = update.effective_user.first_name or "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"

    # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    if user_id not in new_users:
        new_users.add(user_id)
        greeting = f"üëã –í—ñ—Ç–∞—é, {username}! –Ø –≤–∞—à —é—Ä–∏–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é, —ñ —è –Ω–∞–¥–∞–º –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é."
        await update.message.reply_text(greeting)

    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–±—Ä–æ–±–∫—É
    processing_msg = await update.message.reply_text("‚öñÔ∏è –ê–Ω–∞–ª—ñ–∑—É—é –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è...")

    try:
        # –ó–∞–ø–∏—Ç –¥–æ Claude
        response = client.messages.create(
            model="claude-3-sonnet-20240229",
            max_tokens=2000,
            system="""–í–∏ - –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —é—Ä–∏—Å—Ç –£–∫—Ä–∞—ó–Ω–∏. –ê–Ω–∞–ª—ñ–∑—É–π—Ç–µ –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:

1. –Ø–ö–©–û —Ü–µ —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–∞–≤–æ–≤–∞ —Å–∏—Ç—É–∞—Ü—ñ—è:
   - –ù–∞–¥–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—É –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é
   - –ü–æ—Å–∏–ª–∞–π—Ç–µ—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –∑–∞–∫–æ–Ω—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏
   - –°—Ç—Ä—É–∫—Ç—É—Ä—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: –ê–Ω–∞–ª—ñ–∑ ‚Üí –ü—Ä–∞–≤–æ–≤–∞ –±–∞–∑–∞ ‚Üí –ü–æ—Ä–∞–¥–∏
   - –ü–∏—à—ñ—Ç—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é

2. –Ø–ö–©–û —Ü–µ –ù–ï —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è:
   - –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ: "‚ùå –Ø –∫–æ–Ω—Å—É–ª—å—Ç—É—é —Ç—ñ–ª—å–∫–∏ –∑ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å. –û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é, —ñ —è –¥–æ–ø–æ–º–æ–∂—É –∑ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—î—é."

–Æ—Ä–∏–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è –≤–∫–ª—é—á–∞—é—Ç—å: —Ü–∏–≤—ñ–ª—å–Ω–µ, –∫—Ä–∏–º—ñ–Ω–∞–ª—å–Ω–µ, —Ç—Ä—É–¥–æ–≤–µ, —Å—ñ–º–µ–π–Ω–µ, –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–µ –ø—Ä–∞–≤–æ, –≤–ª–∞—Å–Ω—ñ—Å—Ç—å, –¥–æ–≥–æ–≤–æ—Ä–∏, —Å–ø–∞–¥—â–∏–Ω–∞, —Å—É–¥–∏, —à—Ç—Ä–∞—Ñ–∏, –ø–æ—Ä—É—à–µ–Ω–Ω—è –ø—Ä–∞–≤ —Ç–æ—â–æ.""",
            messages=[{"role": "user", "content": message}]
        )

        claude_answer = response.content[0].text

        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–±—Ä–æ–±–∫—É
        await processing_msg.delete()

        # –Ø–∫—â–æ Claude –≤—ñ–¥–ø–æ–≤—ñ–≤ —â–æ —Ü–µ –Ω–µ —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è
        if "‚ùå –Ø –∫–æ–Ω—Å—É–ª—å—Ç—É—é —Ç—ñ–ª—å–∫–∏ –∑ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å" in claude_answer:
            keyboard = [[InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º", callback_data="lawyer")]]
            await update.message.reply_text(claude_answer, reply_markup=InlineKeyboardMarkup(keyboard))
            return

        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å
        full_response = f"""{claude_answer}

---
üë®‚Äçüíº **–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞?** 
–ù–∞—à –∞–¥–≤–æ–∫–∞—Ç –≥–æ—Ç–æ–≤–∏–π –Ω–∞–¥–∞—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é —Ç–∞ –¥–æ–ø–æ–º–æ–≥—É —É –≤–∏—Ä—ñ—à–µ–Ω–Ω—ñ –≤–∞—à–æ—ó —Å–∏—Ç—É–∞—Ü—ñ—ó."""

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —é—Ä–∏–¥–∏—á–Ω–∏—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π
        keyboard = [
            [InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º", callback_data="lawyer")],
            [InlineKeyboardButton("üí∞ –ü–∏—Ç–∞–Ω–Ω—è –æ–ø–ª–∞—Ç–∏", callback_data="payment")]
        ]
        
        await update.message.reply_text(
            full_response, 
            reply_markup=InlineKeyboardMarkup(keyboard), 
            parse_mode='Markdown'
        )

    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞: {e}")
        await processing_msg.delete()
        await update.message.reply_text(
            "‚ùå –¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–≤–æ–∫–∞—Ç–∞.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")]])
        )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    await query.answer()

    if query.data == "lawyer":
        text = f"""üìû **–ó–≤'—è–∑–æ–∫ –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º**

**–¢–µ–ª–µ—Ñ–æ–Ω:** {LAWYER_PHONE}
**Telegram:** @{LAWYER_USERNAME}

üïê **–†–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏:** –ü–Ω-–ü—Ç 9:00-18:00
‚ö° **–¢–µ—Ä–º—ñ–Ω–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è:** –ó–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é

üí¨ **–ü—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –≤–∫–∞–∂—ñ—Ç—å:**
‚Ä¢ –°—É—Ç—å –ø—Ä–∞–≤–æ–≤–æ—ó —Å–∏—Ç—É–∞—Ü—ñ—ó
‚Ä¢ –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω–Ω—è
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ"""

        keyboard = [
            [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç–∏ @" + LAWYER_USERNAME, url=f"https://t.me/{LAWYER_USERNAME}")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

    elif query.data == "payment":
        text = f"""üí∞ **–ü–∏—Ç–∞–Ω–Ω—è –æ–ø–ª–∞—Ç–∏**

–í–∞—Ä—Ç—ñ—Å—Ç—å —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–æ—Å–ª—É–≥ –æ–±–≥–æ–≤–æ—Ä—é—î—Ç—å—Å—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Å–ø—Ä–∞–≤–∏.

üìû **–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ:**
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {LAWYER_PHONE}
‚Ä¢ Telegram: @{LAWYER_USERNAME}

üí° **–ü–µ—Ä—à–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è** –º–æ–∂–µ –±—É—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—é."""

        keyboard = [
            [InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º", callback_data="lawyer")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

    elif query.data == "back":
        text = """üèõÔ∏è **–Æ—Ä–∏–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç**

–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é, —ñ —è –Ω–∞–¥–∞–º –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏ –Ω–∞ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ –£–∫—Ä–∞—ó–Ω–∏."""

        keyboard = [[InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–≤–æ–∫–∞—Ç–æ–º", callback_data="lawyer")]]
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üèõÔ∏è –ó–∞–ø—É—Å–∫ —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –±–æ—Ç–∞...")
    print(f"üìû –ê–¥–≤–æ–∫–∞—Ç: {LAWYER_PHONE}")
    print(f"üí¨ Telegram: @{LAWYER_USERNAME}")

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–∞
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    # –û–±—Ä–æ–±–Ω–∏–∫–∏
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
    app.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    main()
