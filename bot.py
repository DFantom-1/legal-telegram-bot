#!/usr/bin/env python3
import logging
import os
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import anthropic

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
TOKEN = os.environ.get('TELEGRAM_TOKEN')
ANTHROPIC_KEY = os.environ.get('ANTHROPIC_API_KEY')

if not TOKEN or not ANTHROPIC_KEY:
    logger.error("–í—ñ–¥—Å—É—Ç–Ω—ñ environment variables!")
    exit(1)

# Claude –∫–ª—ñ—î–Ω—Ç
try:
    client = anthropic.Anthropic(api_key=ANTHROPIC_KEY)
    logger.info("Claude –∫–ª—ñ—î–Ω—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
except Exception as e:
    logger.error(f"–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Claude: {e}")
    exit(1)

# –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–≤–æ–∫–∞—Ç–∞
LAWYER_PHONE = "+380983607200"
LAWYER_USERNAME = "Law_firm_zakhyst"

def start(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    keyboard = [[InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    text = """üèõÔ∏è **–Æ—Ä–∏–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç**

–í—ñ—Ç–∞—é! –Ø –Ω–∞–¥–∞—é –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –ø—Ä–∞–≤–∞.

–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü—ñ—é —ñ —è –¥–∞–º –¥–µ—Ç–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏ –Ω–∞ –∑–∞–∫–æ–Ω–∏."""
    
    update.message.reply_text(text, reply_markup=reply_markup, parse_mode='Markdown')

def handle_message(update, context):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    message = update.message.text
    user_name = update.effective_user.first_name or "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"
    
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–±—Ä–æ–±–∫—É
    processing = update.message.reply_text("‚öñÔ∏è –ê–Ω–∞–ª—ñ–∑—É—é –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è...")
    
    try:
        # –ó–∞–ø–∏—Ç –¥–æ Claude
        response = client.messages.create(
            model="claude-3-sonnet-20240229",
            max_tokens=1500,
            system="""–í–∏ - —é—Ä–∏—Å—Ç –£–∫—Ä–∞—ó–Ω–∏. –ê–Ω–∞–ª—ñ–∑—É–π—Ç–µ –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:

–Ø–ö–©–û —Ü–µ —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è:
- –ù–∞–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é
- –ü–æ—Å–∏–ª–∞–π—Ç–µ—Å—è –Ω–∞ —Å—Ç–∞—Ç—Ç—ñ –∑–∞–∫–æ–Ω—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏  
- –°—Ç—Ä—É–∫—Ç—É—Ä—É–π—Ç–µ: –ê–Ω–∞–ª—ñ–∑ ‚Üí –ü—Ä–∞–≤–æ–≤–∞ –±–∞–∑–∞ ‚Üí –ü–æ—Ä–∞–¥–∏

–Ø–ö–©–û —Ü–µ –ù–ï —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è:
- –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ: "‚ùå –Ø –∫–æ–Ω—Å—É–ª—å—Ç—É—é —Ç—ñ–ª—å–∫–∏ –∑ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å. –û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é."

–ü–∏—à—ñ—Ç—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.""",
            messages=[{"role": "user", "content": message}]
        )
        
        claude_answer = response.content[0].text
        
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–±—Ä–æ–±–∫—É
        processing.delete()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ —é—Ä–∏–¥–∏—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è
        if "‚ùå –Ø –∫–æ–Ω—Å—É–ª—å—Ç—É—é —Ç—ñ–ª—å–∫–∏ –∑ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å" in claude_answer:
            keyboard = [[InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            update.message.reply_text(claude_answer, reply_markup=reply_markup)
            return
        
        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å
        full_response = f"""{claude_answer}

---
üë®‚Äçüíº **–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è?**
–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∞–¥–≤–æ–∫–∞—Ç–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–≥–ª—è–¥—É —Å–ø—Ä–∞–≤–∏."""
        
        keyboard = [
            [InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")],
            [InlineKeyboardButton("üí∞ –û–ø–ª–∞—Ç–∞", callback_data="payment")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        update.message.reply_text(full_response, reply_markup=reply_markup, parse_mode='Markdown')
        
    except Exception as e:
        processing.delete()
        logger.error(f"–ü–æ–º–∏–ª–∫–∞: {e}")
        
        keyboard = [[InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        update.message.reply_text(
            "‚ùå –¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–≤–æ–∫–∞—Ç–∞.",
            reply_markup=reply_markup
        )

def button_handler(update, context):
    """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    query.answer()
    
    if query.data == "lawyer":
        text = f"""üìû **–ö–æ–Ω—Ç–∞–∫—Ç–∏ –∞–¥–≤–æ–∫–∞—Ç–∞**

**–¢–µ–ª–µ—Ñ–æ–Ω:** {LAWYER_PHONE}
**Telegram:** @{LAWYER_USERNAME}

üïê **–ì—Ä–∞—Ñ—ñ–∫:** –ü–Ω-–ü—Ç 9:00-18:00
‚ö° **–¢–µ—Ä–º—ñ–Ω–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è:** –ó–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é

üí¨ **–û–ø–∏—à—ñ—Ç—å –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ:**
‚Ä¢ –í–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é
‚Ä¢ –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω–Ω—è
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ"""

        keyboard = [
            [InlineKeyboardButton("üí¨ @" + LAWYER_USERNAME, url=f"https://t.me/{LAWYER_USERNAME}")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(text, reply_markup=reply_markup, parse_mode='Markdown')
        
    elif query.data == "payment":
        text = f"""üí∞ **–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥**

–í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Å–ø—Ä–∞–≤–∏.

üìû **–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è:**
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {LAWYER_PHONE}  
‚Ä¢ Telegram: @{LAWYER_USERNAME}

üí° **–ü–µ—Ä—à–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –º–æ–∂–µ –±—É—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—é.**"""

        keyboard = [
            [InlineKeyboardButton("üìû –ó–≤'—è–∑–∞—Ç–∏—Å—è", callback_data="lawyer")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(text, reply_markup=reply_markup, parse_mode='Markdown')
        
    elif query.data == "back":
        text = """üèõÔ∏è **–Æ—Ä–∏–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç**

–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–∞–≤–æ–≤—É —Å–∏—Ç—É–∞—Ü—ñ—é —ñ —è –Ω–∞–¥–∞–º –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é."""

        keyboard = [[InlineKeyboardButton("üìû –ê–¥–≤–æ–∫–∞—Ç", callback_data="lawyer")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(text, reply_markup=reply_markup, parse_mode='Markdown')

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üèõÔ∏è –ó–∞–ø—É—Å–∫ —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è updater
    updater = Updater(token=TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(button_handler))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    
    # –ó–∞–ø—É—Å–∫
    print("‚úÖ –Æ—Ä–∏–¥–∏—á–Ω–∏–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    print(f"üìû –ê–¥–≤–æ–∫–∞—Ç: {LAWYER_PHONE}")
    print(f"üí¨ Telegram: @{LAWYER_USERNAME}")
    
    # Polling
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
